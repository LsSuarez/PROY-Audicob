@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager

@{
    var usuario = await UserManager.GetUserAsync(User);
}

<!-- Campana de Notificaciones -->
<div class="dropdown" id="notificacionesDropdown">
    <button class="btn btn-link position-relative" type="button" id="notificacionesBtn" data-bs-toggle="dropdown"
        aria-expanded="false">
        <i class="bi bi-bell-fill" style="font-size: 1.5rem; color: #333;"></i>
        <span id="contadorNotificaciones"
            class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger"
            style="display: none;">
            0
        </span>
    </button>

    <!-- Dropdown Menu de Notificaciones -->
    <div class="dropdown-menu dropdown-menu-end" style="min-width: 350px; max-height: 500px; overflow-y: auto;"
        id="notificacionesMenu">
        <div class="dropdown-header">
            <strong>Notificaciones</strong>
        </div>
        <div id="listaNotificaciones">
            <div class="text-center p-3">
                <small class="text-muted">Cargando...</small>
            </div>
        </div>
        <div class="dropdown-divider"></div>
        <a class="dropdown-item text-center small" href="@Url.Action("Index", "Notificaciones")">Ver todas las
            notificaciones</a>
    </div>
</div>

<style>
    .notificacion-item {
        padding: 10px 15px;
        border-bottom: 1px solid #eee;
        cursor: pointer;
        transition: background-color 0.2s;
    }

    .notificacion-item:hover {
        background-color: #f8f9fa;
    }

    .notificacion-item.no-leida {
        background-color: #e7f3ff;
        font-weight: 500;
    }

    .notificacion-icono {
        font-size: 1.5rem;
        margin-right: 10px;
    }

    .notificacion-contenido {
        flex-grow: 1;
    }

    .notificacion-titulo {
        font-weight: 600;
        margin-bottom: 3px;
    }

    .notificacion-descripcion {
        font-size: 0.85rem;
        color: #666;
        margin-bottom: 3px;
    }

    .notificacion-fecha {
        font-size: 0.75rem;
        color: #999;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        cargarNotificaciones();

        // Recargar notificaciones cada 30 segundos
        setInterval(cargarNotificaciones, 30000);
    });

    function cargarNotificaciones() {
        fetch('/api/notificaciones/mis-notificaciones')
            .then(response => response.json())
            .then(data => {
                mostrarNotificaciones(data);
                actualizarContador(data);
            })
            .catch(error => console.error('Error al cargar notificaciones:', error));
    }

    function mostrarNotificaciones(notificaciones) {
        const lista = document.getElementById('listaNotificaciones');

        if (notificaciones.length === 0) {
            lista.innerHTML = '<div class="text-center p-3"><small class="text-muted">No hay notificaciones</small></div>';
            return;
        }

        let html = '';
        notificaciones.forEach(notificacion => {
            const claseNoLeida = notificacion.leida ? '' : 'no-leida';
            const fecha = new Date(notificacion.fechaCreacion).toLocaleString('es-ES');

            html += `
            <div class="notificacion-item ${claseNoLeida} d-flex align-items-start" onclick="marcarComoLeida(${notificacion.id})">
                <span class="notificacion-icono">${notificacion.iconoTipo || 'ðŸ“‹'}</span>
                <div class="notificacion-contenido">
                    <div class="notificacion-titulo">${notificacion.titulo}</div>
                    <div class="notificacion-descripcion">${notificacion.descripcion}</div>
                    <div class="notificacion-fecha">${fecha}</div>
                </div>
            </div>
        `;
        });

        lista.innerHTML = html;
    }

    function actualizarContador(notificaciones) {
        const contador = notificaciones.filter(n => !n.leida).length;
        const badge = document.getElementById('contadorNotificaciones');

        if (contador > 0) {
            badge.textContent = contador;
            badge.style.display = 'inline-block';
        } else {
            badge.style.display = 'none';
        }
    }

    function marcarComoLeida(id) {
        fetch(`/api/notificaciones/marcar-leida/${id}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        })
            .then(response => response.json())
            .then(() => {
                cargarNotificaciones();
            })
            .catch(error => console.error('Error al marcar notificaciÃ³n:', error));
    }
</script>